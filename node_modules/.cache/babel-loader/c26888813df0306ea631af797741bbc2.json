{"ast":null,"code":"var _jsxFileName = \"/home/maksim/Documents/login/login/src/components/PrivateRoute.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from 'react-router-dom'; // const fakeAuth = {\n//     isAuthenticated: false,\n//     authenticate(cb) {\n//       this.isAuthenticated = true\n//       setTimeout(cb, 100) // fake async\n//     },\n//     signout(cb) {\n//       this.isAuthenticated = false\n//       setTimeout(cb, 100) // fake async\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [fakeAuth, setFakeAuth] = useState({\n    isAuthenticated: false\n  });\n\n  const reRender = () => {\n    _s();\n\n    return useEffect(() => {\n      console.log('render');\n      setFakeAuth({\n        isAuthenticated: true\n      });\n      console.log({\n        fakeAuth\n      });\n      return () => {\n        console.log('unmount');\n        console.log({\n          fakeAuth\n        });\n      };\n    }, [fakeAuth]);\n  };\n\n  _s(reRender, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => {\n      return fakeAuth.isAuthenticated === true ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(PrivateRoute, \"nCUrY88PVV+TNlr89f6Kv0sCXjc=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/maksim/Documents/login/login/src/components/PrivateRoute.js"],"names":["React","useEffect","useState","Route","Redirect","PrivateRoute","children","rest","fakeAuth","setFakeAuth","isAuthenticated","reRender","console","log","location","pathname","state","from"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA6C,OAA7C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAtB,EAA6C;AAAA;;AAAA;;AAEzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AAAEQ,IAAAA,eAAe,EAAE;AAAnB,GAAD,CAAxC;;AAEA,QAAMC,QAAQ,GAAG;AAAA;;AAAA,WAEjBV,SAAS,CAAC,MAAM;AAIZW,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAGAJ,MAAAA,WAAW,CAAC;AAACC,QAAAA,eAAe,EAAE;AAAlB,OAAD,CAAX;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,QAAAA;AAAD,OAAZ;AACA,aAAM,MAAK;AACPI,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,UAAAA;AAAD,SAAZ;AAEH,OAJD;AAMH,KAhBQ,EAgBN,CAACA,QAAD,CAhBM,CAFQ;AAAA,GAAjB;;AAJyC,KAInCG,QAJmC;;AAyBzC,sBACI,QAAC,KAAD,OAAWJ,IAAX;AAAiB,IAAA,MAAM,EAAE,CAAC;AAAEO,MAAAA;AAAF,KAAD,KAAkB;AACvC,aAAON,QAAQ,CAACE,eAAT,KAA6B,IAA7B,GACDJ,QADC,gBAED,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AACZS,UAAAA,QAAQ,EAAE,QADE;AAEZC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR;AAFK;AAAd;AAAA;AAAA;AAAA;AAAA,cAFN;AAMH;AAPD;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;IApCQT,Y;;KAAAA,Y;AAwCT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState,  } from \"react\"\nimport { Route, Redirect } from 'react-router-dom'\n\n\n// const fakeAuth = {\n//     isAuthenticated: false,\n//     authenticate(cb) {\n//       this.isAuthenticated = true\n//       setTimeout(cb, 100) // fake async\n//     },\n//     signout(cb) {\n//       this.isAuthenticated = false\n//       setTimeout(cb, 100) // fake async\n//     }\n// }\n\n\n\nfunction PrivateRoute({ children, ...rest }) {\n\n    const [fakeAuth, setFakeAuth] = useState({ isAuthenticated: false })\n\n    const reRender = () =>\n\n    useEffect(() => {\n        \n        \n        \n        console.log('render')\n            \n        \n        setFakeAuth({isAuthenticated: true})\n          \n        console.log({fakeAuth})\n        return() =>{\n            console.log('unmount')\n            console.log({fakeAuth})\n            \n        }\n\n    }, [fakeAuth]);\n\n\n    return (\n        <Route {...rest} render={({ location }) => {\n            return fakeAuth.isAuthenticated === true\n                ? children\n                : <Redirect to={{\n                    pathname: '/login',\n                    state: { from: location }\n                }} />\n        }} />\n    )\n\n}\n\n\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}