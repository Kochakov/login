{"ast":null,"code":"var _jsxFileName = \"/home/maksim/Documents/login/login/src/components/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Redirect, useHistory } from 'react-router-dom';\nimport Dashboard from \"./Dashboard\"; // const fakeAuth = {\n//     isAuthenticated: false,\n//     authenticate(cb) {\n//       this.isAuthenticated = true\n//       setTimeout(cb, 100) // fake async\n//     },\n//     signout(cb) {\n//       this.isAuthenticated = false\n//       setTimeout(cb, 100) // fake async\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  _s();\n\n  const history = useHistory();\n  const [fakeAuth, setFakeAuth] = useState({\n    isAuthenticated: false\n  });\n  useEffect(() => {\n    console.log('render');\n    setFakeAuth({\n      isAuthenticated: true\n    });\n    return () => {\n      console.log('unmount');\n    };\n  }, [fakeAuth]);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => {\n      return fakeAuth.isAuthenticated === true ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PrivateRoute, \"4P0kD4DCFUwVZLc3VtzhZDEAhss=\", false, function () {\n  return [useHistory];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/maksim/Documents/login/login/src/components/PrivateRoute.js"],"names":["React","useEffect","useState","Route","Redirect","useHistory","Dashboard","PrivateRoute","children","rest","history","fakeAuth","setFakeAuth","isAuthenticated","console","log","location","pathname","state","from"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAtB,EAA6C;AAAA;;AAEzC,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AAIA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AAAEW,IAAAA,eAAe,EAAE;AAAnB,GAAD,CAAxC;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEAH,IAAAA,WAAW,CAAC;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAAD,CAAX;AAEA,WAAM,MAAK;AAEPC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAHD;AASH,GAdQ,EAcN,CAACJ,QAAD,CAdM,CAAT;AAiBA,sBACI,QAAC,KAAD,OAAWF,IAAX;AAAiB,IAAA,MAAM,EAAE,CAAC;AAAEO,MAAAA;AAAF,KAAD,KAAkB;AACvC,aAAOL,QAAQ,CAACE,eAAT,KAA6B,IAA7B,GACDL,QADC,gBAED,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AACZS,UAAAA,QAAQ,EAAE,QADE;AAEZC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR;AAFK;AAAd;AAAA;AAAA;AAAA;AAAA,cAFN;AAMH;AAPD;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GArCQT,Y;UAEWF,U;;;KAFXE,Y;AAyCT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Route, Redirect, useHistory } from 'react-router-dom'\nimport Dashboard from \"./Dashboard\";\n\n// const fakeAuth = {\n//     isAuthenticated: false,\n//     authenticate(cb) {\n//       this.isAuthenticated = true\n//       setTimeout(cb, 100) // fake async\n//     },\n//     signout(cb) {\n//       this.isAuthenticated = false\n//       setTimeout(cb, 100) // fake async\n//     }\n// }\n\n\n\nfunction PrivateRoute({ children, ...rest }) {\n\n    const history = useHistory();\n\n\n   \n    const [fakeAuth, setFakeAuth] = useState({ isAuthenticated: false })\n\n\n    useEffect(() => {\n        console.log('render')\n\n        setFakeAuth({isAuthenticated: true})\n\n        return() =>{\n            \n            console.log('unmount')\n        }\n        \n        \n        \n\n\n    }, [fakeAuth]);\n\n\n    return (\n        <Route {...rest} render={({ location }) => {\n            return fakeAuth.isAuthenticated === true\n                ? children\n                : <Redirect to={{\n                    pathname: '/login',\n                    state: { from: location }\n                }} />\n        }} />\n    )\n\n}\n\n\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}