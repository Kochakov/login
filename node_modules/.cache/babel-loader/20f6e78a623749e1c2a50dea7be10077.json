{"ast":null,"code":"var _jsxFileName = \"/home/maksim/Documents/Aftorization/auth/src/components/PrivateRoute.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Redirect } from 'react-router-dom';\nimport useToken from \"../useToken\"; // const fakeAuth = {\n//     isAuthenticated: false,\n//     authenticate(cb) {\n//       this.isAuthenticated = true\n//       setTimeout(cb, 100) // fake async\n//     },\n//     signout(cb) {\n//       this.isAuthenticated = false\n//       setTimeout(cb, 100) // fake async\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  // const [fakeAuth, setFakeAuth] = useState({ isAuthenticated: false })\n  // useEffect(() => {\n  //     console.log('render', {fakeAuth})\n  //     setFakeAuth(fakeAuth.isAuthenticated = true)\n  // return() =>{\n  //     console.log('unmount')\n  //     console.log({fakeAuth})\n  // }\n  // }, [fakeAuth]);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: ({\n      location\n    }) => {\n      return token === {\n        Admin\n      } ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/maksim/Documents/Aftorization/auth/src/components/PrivateRoute.js"],"names":["React","useEffect","useState","Route","Redirect","useToken","PrivateRoute","children","rest","location","token","Admin","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA6C,OAA7C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAtB,EAA6C;AAEzC;AAEA;AAEA;AAEA;AAEI;AACA;AACA;AAEA;AAEJ;AAEA,sBACI,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkB;AACvC,aAAOC,KAAK,KAAK;AAACC,QAAAA;AAAD,OAAV,GACDJ,QADC,gBAED,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AACZK,UAAAA,QAAQ,EAAE,QADE;AAEZC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEL;AAAR;AAFK;AAAd;AAAA;AAAA;AAAA;AAAA,cAFN;AAMH;AAPD;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;KA7BQH,Y;AAiCT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState,  } from \"react\"\nimport { Route, Redirect } from 'react-router-dom'\nimport useToken from \"../useToken\";\n\n\n// const fakeAuth = {\n//     isAuthenticated: false,\n//     authenticate(cb) {\n//       this.isAuthenticated = true\n//       setTimeout(cb, 100) // fake async\n//     },\n//     signout(cb) {\n//       this.isAuthenticated = false\n//       setTimeout(cb, 100) // fake async\n//     }\n// }\n\n\n\nfunction PrivateRoute({ children, ...rest }) {\n\n    // const [fakeAuth, setFakeAuth] = useState({ isAuthenticated: false })\n\n    // useEffect(() => {\n        \n    //     console.log('render', {fakeAuth})\n        \n    //     setFakeAuth(fakeAuth.isAuthenticated = true)\n          \n        // return() =>{\n        //     console.log('unmount')\n        //     console.log({fakeAuth})\n            \n        // }\n\n    // }, [fakeAuth]);\n\n    return (\n        <Route {...rest} render={({ location }) => {\n            return token === {Admin}\n                ? children\n                : <Redirect to={{\n                    pathname: '/login',\n                    state: { from: location }\n                }} />\n        }} />\n    )\n\n}\n\n\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}